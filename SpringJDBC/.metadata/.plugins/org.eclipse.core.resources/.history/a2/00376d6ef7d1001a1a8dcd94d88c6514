package com.springjdbc.util;

import java.io.File;
import java.io.FileReader;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.stereotype.Component;

import com.opencsv.CSVReader;

@Component
public class ReadCsv {

	@Value("${pathCsv}")
	private String path;
	@Autowired
	ResourceLoader resourceLoader;

	List<String[]> rows;
	
	
	public List<String[]>readCsv() throws Exception
	   {
		File srcFile = new FileSystemResource(path).getFile();

		String pathResource = srcFile.getAbsolutePath();
		
	    Reader reader = Files.newBufferedReader(Paths.get(
	    ClassLoader.getSystemResource(pathResource).toURI()));
	    oneByOne(reader).toString();
	     return allRows;
	   }
	
	public static List<String[]> oneByOne(Reader reader) throws Exception {
	    StringBuilder dataString = new StringBuilder();
	    CSVReader csvReader = new CSVReader(reader);
	    String[] line;
	    while ((line = csvReader.readNext()) != null) {
	    	dataString.append(line).append(",");
	    }
	    reader.close();
	    csvReader.close();
	    return list;
	}
	
	public String oneByOneExample() throws Exception {
		File srcFile = new FileSystemResource(path).getFile();

		String pathResource = srcFile.getAbsolutePath();
	    Reader reader = Files.newBufferedReader(Paths.get(
	      ClassLoader.getSystemResource(pathResource).toURI()));
	    return CsvReaderExamples.oneByOne(reader).toString();
	}
}
